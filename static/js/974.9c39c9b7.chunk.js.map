{"version":3,"file":"static/js/974.9c39c9b7.chunk.js","mappings":"8SAQO,SAAeA,IAAgB,OAAAC,EAAAC,MAAC,KAADC,UAAA,CAGrC,SAAAF,IAAA,OAAAA,GAAAG,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAHM,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,EAAAP,UAAA,OAAAE,EAAAA,EAAAA,KAAAM,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAAwC,OAARN,EAAIE,EAAAK,OAAA,QAAAC,IAAAN,EAAA,GAAAA,EAAA,GAAG,EAACE,EAAAE,KAAA,EACtBG,EAAAA,EAAAA,IAAU,sBAAuB,CAAEC,OAAQ,CAAEV,KAAAA,KAAU,KAAD,EAA/D,OAARC,EAAQG,EAAAO,KAAAP,EAAAQ,OAAA,SACPX,EAASY,MAAI,wBAAAT,EAAAU,OAAA,GAAAf,EAAA,KACrBN,EAAAC,MAAA,KAAAC,UAAA,CAEM,SAAeoB,EAAiBC,GAAA,OAAAC,EAAAvB,MAAC,KAADC,UAAA,CAKtC,SAAAsB,IAAA,OAAAA,GAAArB,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MALM,SAAAoB,EAAiCC,GAAK,IAAAlB,EAAA,OAAAJ,EAAAA,EAAAA,KAAAM,MAAA,SAAAiB,GAAA,cAAAA,EAAAf,KAAAe,EAAAd,MAAA,cAAAc,EAAAd,KAAA,EACpBG,EAAAA,EAAAA,IAAU,sBAAuB,CACtDC,OAAQ,CAAES,MAAAA,KACT,KAAD,EAFY,OAARlB,EAAQmB,EAAAT,KAAAS,EAAAR,OAAA,SAGPX,EAASY,MAAI,wBAAAO,EAAAN,OAAA,GAAAI,EAAA,MACrBxB,MAAA,KAAAC,UAAA,CAEM,SAAe0B,EAAoBC,GAAA,OAAAC,EAAA7B,MAAC,KAADC,UAAA,CAGzC,SAAA4B,IAAA,OAAAA,GAAA3B,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAHM,SAAA0B,EAAoCC,GAAO,IAAAxB,EAAA,OAAAJ,EAAAA,EAAAA,KAAAM,MAAA,SAAAuB,GAAA,cAAAA,EAAArB,KAAAqB,EAAApB,MAAA,cAAAoB,EAAApB,KAAA,EACzBG,EAAAA,EAAAA,IAAU,SAADkB,OAAUF,IAAW,KAAD,EAAtC,OAARxB,EAAQyB,EAAAf,KAAAe,EAAAd,OAAA,SACPX,EAASY,MAAI,wBAAAa,EAAAZ,OAAA,GAAAU,EAAA,MACrB9B,MAAA,KAAAC,UAAA,CAEM,SAAeiC,EAAaC,GAAA,OAAAC,EAAApC,MAAC,KAADC,UAAA,CAGlC,SAAAmC,IAAA,OAAAA,GAAAlC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAHM,SAAAiC,EAA6BN,GAAO,IAAAxB,EAAA,OAAAJ,EAAAA,EAAAA,KAAAM,MAAA,SAAA6B,GAAA,cAAAA,EAAA3B,KAAA2B,EAAA1B,MAAA,cAAA0B,EAAA1B,KAAA,EAClBG,EAAAA,EAAAA,IAAU,SAADkB,OAAUF,EAAO,aAAY,KAAD,EAA9C,OAARxB,EAAQ+B,EAAArB,KAAAqB,EAAApB,OAAA,SACPX,EAASY,KAAKoB,MAAI,wBAAAD,EAAAlB,OAAA,GAAAiB,EAAA,MAC1BrC,MAAA,KAAAC,UAAA,CAEM,SAAeuC,EAAgBC,GAAA,OAAAC,EAAA1C,MAAC,KAADC,UAAA,CAGrC,SAAAyC,IAAA,OAAAA,GAAAxC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAHM,SAAAuC,EAAgCZ,GAAO,IAAAxB,EAAA,OAAAJ,EAAAA,EAAAA,KAAAM,MAAA,SAAAmC,GAAA,cAAAA,EAAAjC,KAAAiC,EAAAhC,MAAA,cAAAgC,EAAAhC,KAAA,EACrBG,EAAAA,EAAAA,IAAU,SAADkB,OAAUF,EAAO,aAAY,KAAD,EAA9C,OAARxB,EAAQqC,EAAA3B,KAAA2B,EAAA1B,OAAA,SACPX,EAASY,KAAK0B,SAAO,wBAAAD,EAAAxB,OAAA,GAAAuB,EAAA,MAC7B3C,MAAA,KAAAC,UAAA,CAEM,SAAe6C,EAAcC,GAAA,OAAAC,EAAAhD,MAAC,KAADC,UAAA,CAGnC,SAAA+C,IAAA,OAAAA,GAAA9C,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAHM,SAAA6C,EAA8BlB,GAAO,IAAAxB,EAAA,OAAAJ,EAAAA,EAAAA,KAAAM,MAAA,SAAAyC,GAAA,cAAAA,EAAAvC,KAAAuC,EAAAtC,MAAA,cAAAsC,EAAAtC,KAAA,EACnBG,EAAAA,EAAAA,IAAU,SAADkB,OAAUF,EAAO,YAAW,KAAD,EAA7C,OAARxB,EAAQ2C,EAAAjC,KAAAiC,EAAAhC,OAAA,SACPX,EAASY,MAAI,wBAAA+B,EAAA9B,OAAA,GAAA6B,EAAA,MACrBjD,MAAA,KAAAC,UAAA,CApCDc,EAAAA,EAAAA,SAAAA,QAAsB,+BACtBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBoC,QAAQ,mCACRC,eAAe,E,kMCHJC,EAAqBC,EAAAA,GAAAA,QAAcC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,qnE,oBCAnCC,EAAmBH,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,s9B,SC4D1C,EAvDqB,WACnB,IAAQE,GAAaC,EAAAA,EAAAA,MAAbD,SACRE,GAAsCC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7CI,EAAWF,EAAA,GAAEG,EAAcH,EAAA,GAClCI,GAAsCL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA9CE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAE5BG,GAAmBC,EAAAA,EAAAA,cAAWrE,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAC,SAAAC,IAAA,IAAAmE,EAAA3B,EAAA4B,EAAA,OAAAtE,EAAAA,EAAAA,KAAAM,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAEPkC,EAAAA,EAAAA,IAAeY,GAAU,KAAD,EAAAc,EAAA9D,EAAAO,KAA1C4B,EAAO2B,EAAP3B,QAEF4B,EAAkB5B,EAAQ6B,MAC9B,SAAAC,GAAK,MAAmB,qBAAfA,EAAMC,MAA8C,YAAfD,EAAME,IAAkB,IAExEZ,EAAeQ,GAAmB,MAAM/D,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAoE,GAAApE,EAAA,SAExCqE,QAAQC,MAAM,8BAA6BtE,EAAAoE,IAAS,yBAAApE,EAAAU,OAAA,GAAAf,EAAA,kBAErD,CAACqD,KAEJuB,EAAAA,EAAAA,YAAU,WACRX,GACF,GAAG,CAACA,IAEJ,IAAMY,EAAc,WAAH,OAASb,GAAe,SAAA1D,GAAI,OAAKA,CAAI,GAAE,EAExD,OACEwE,EAAAA,EAAAA,MAAC1B,EAAgB,CAAA2B,SAAA,CACdpB,IACCqB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,kBAAiBF,UAC9BD,EAAAA,EAAAA,MAAA,MAAIG,UAAU,cAAcC,QAASL,EAAYE,SAAA,CAC9CpB,EAAYY,MACbS,EAAAA,EAAAA,KAACG,EAAAA,IAAsB,CAACF,UAAU,oBAIvClB,IACCiB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,QAAOF,UACpBD,EAAAA,EAAAA,MAAA,OAAKG,UAAU,gBAAeF,SAAA,EAC5BC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,QAAQC,QAASL,EAAYE,SAAC,UAG9CC,EAAAA,EAAAA,KAAA,UACEI,MAAM,MACNC,OAAO,MACPC,IAAG,iCAAA1D,OAAmC+B,EAAY4B,KAClDC,MAAO7B,EAAYY,KACnBkB,MAAM,2FACNC,iBAAe,WAO7B,EC8CA,EA9FqB,WAAO,IAADC,EACjBtC,GAAaC,EAAAA,EAAAA,MAAbD,SACFuC,GAAWC,EAAAA,EAAAA,MACjBtC,GAAoCC,EAAAA,EAAAA,UAAS,CAAC,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAzCuC,EAAUrC,EAAA,GAAEsC,EAAatC,EAAA,GAC1BuC,GAAyB,QAAdL,EAAAC,EAASK,aAAK,IAAAN,OAAA,EAAdA,EAAgBO,OAAQ,IAEnCC,GAAqBjC,EAAAA,EAAAA,cAAWrE,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAC,SAAAC,IAAA,IAAAc,EAAA,OAAAhB,EAAAA,EAAAA,KAAAM,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAEhBe,EAAAA,EAAAA,IAAqB+B,GAAU,KAAD,EAA3CvC,EAAIT,EAAAO,KACVmF,EAAcjF,GAAMT,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAoE,GAAApE,EAAA,SAEpBqE,QAAQC,MAAMtE,EAAAoE,GAAM2B,SAAS,yBAAA/F,EAAAU,OAAA,GAAAf,EAAA,kBAE9B,CAACqD,KAEJuB,EAAAA,EAAAA,YAAU,WACRuB,GACF,GAAG,CAACA,IAEJ,IAAQX,EACNM,EADMN,MAAOa,EACbP,EADaO,aAAcC,EAC3BR,EAD2BQ,aAAcC,EACzCT,EADyCS,SAAUC,EACnDV,EADmDU,OAAQC,EAC3DX,EAD2DW,YAEvDC,EAAO,IAAIC,KAAKN,GAAcO,cAC9BC,EAAQC,KAAKC,MAAqB,GAAfT,GAEzB,OACExB,EAAAA,EAAAA,MAAAkC,EAAAA,SAAA,CAAAjC,SAAA,EACED,EAAAA,EAAAA,MAAC9B,EAAkB,CAAA+B,SAAA,EACjBC,EAAAA,EAAAA,KAACiC,EAAAA,GAAM,CAAChC,UAAU,WAAWiC,GAAIlB,EAASjB,UACxCC,EAAAA,EAAAA,KAACmC,EAAAA,GAAI,CAAClC,UAAU,YAAYiC,GAAIlB,EAASjB,SAAC,eAI5CD,EAAAA,EAAAA,MAAA,OAAKG,UAAU,eAAcF,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,OACEC,UAAU,WACVG,MAAO,IACPE,IACEmB,EAAW,uCAAA7E,OACgC6E,GACvCW,EAENC,IAAK7B,KAEPV,EAAAA,EAAAA,MAAA,OAAKG,UAAU,YAAWF,SAAA,EACxBD,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACED,EAAAA,EAAAA,MAAA,MAAIG,UAAU,aAAYF,SAAA,CACvBS,EAAM,KAAGkB,EAAK,QAEjB5B,EAAAA,EAAAA,MAAA,KAAGG,UAAU,aAAYF,SAAA,CAAC,cAAY8B,EAAM,SAC5C7B,EAAAA,EAAAA,KAAA,MAAIC,UAAU,gBAAeF,SAAC,eAC9BC,EAAAA,EAAAA,KAAA,KAAGC,UAAU,gBAAeF,SAAEwB,KAC9BvB,EAAAA,EAAAA,KAAA,MAAIC,UAAU,eAAcF,SAAC,YAC5ByB,GACCA,EAAOc,KAAI,SAAAC,GAAK,OACdzC,EAAAA,EAAAA,MAAA,QAAMG,UAAU,cAAaF,SAAA,CAC1BwC,EAAMhD,KAAM,MADoBgD,EAAMC,GAElC,KAEXxC,EAAAA,EAAAA,KAACyC,EAAY,QAEfzC,EAAAA,EAAAA,KAAA,OAAAD,UACED,EAAAA,EAAAA,MAAA,MAAIG,UAAU,OAAMF,SAAA,EAClBC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,4BAA2BF,UACvCD,EAAAA,EAAAA,MAACqC,EAAAA,GAAI,CACHlC,UAAU,YACViC,GAAG,OACHjB,MAAO,CAAEC,KAAMF,GAAWjB,SAAA,CAC3B,QAECC,EAAAA,EAAAA,KAAC0C,EAAAA,IAAc,CAACzC,UAAU,oBAG9BD,EAAAA,EAAAA,KAAA,MAAIC,UAAU,kBAAiBF,UAC7BD,EAAAA,EAAAA,MAACqC,EAAAA,GAAI,CACHlC,UAAU,sBACViC,GAAG,SACHjB,MAAO,CAAEC,KAAMF,GAAWjB,SAAA,CAC3B,WAECC,EAAAA,EAAAA,KAAC2C,EAAAA,IAAgB,CAAC1C,UAAU,kCAQ1CD,EAAAA,EAAAA,KAAC4C,EAAAA,SAAQ,CAACC,UAAU7C,EAAAA,EAAAA,KAAC8C,EAAAA,EAAM,IAAI/C,UAC7BC,EAAAA,EAAAA,KAAC+C,EAAAA,GAAM,QAIf,EC9FA,EARyB,WACvB,OACE/C,EAAAA,EAAAA,KAAAgC,EAAAA,SAAA,CAAAjC,UACEC,EAAAA,EAAAA,KAACgD,EAAY,KAGnB,C","sources":["api/api.js","components/MovieDetails/MovieDetails.styled.js","components/TrailerMovie/TrailerMovie.styled.jsx","components/TrailerMovie/TrailerMovie.jsx","components/MovieDetails/MovieDetails.jsx","pages/MovieDetailsPage.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = `https://api.themoviedb.org/3`;\naxios.defaults.params = {\n  api_key: `35121646617936b190c0d2ce324cb747`,\n  include_adult: false,\n};\n\nexport async function getPopularMovies(page = 1) {\n  const response = await axios.get('/trending/movie/day', { params: { page } });\n  return response.data;\n}\n\nexport async function getSearchedMovies(query) {\n  const response = await axios.get('/search/movie?query', {\n    params: { query },\n  });\n  return response.data;\n}\n\nexport async function getMoviesDetailsById(movieId) {\n  const response = await axios.get(`movie/${movieId}`);\n  return response.data;\n}\n\nexport async function getMoviesCast(movieId) {\n  const response = await axios.get(`movie/${movieId}/credits`);\n  return response.data.cast;\n}\n\nexport async function getMoviesReviews(movieId) {\n  const response = await axios.get(`movie/${movieId}/reviews`);\n  return response.data.results;\n}\n\nexport async function getMoviesVideo(movieId) {\n  const response = await axios.get(`movie/${movieId}/videos`);\n  return response.data;\n}\n","import { styled } from 'styled-components';\n\nexport const MovieDetailsStyled = styled.section`\n  .list-additional {\n    cursor: pointer;\n    border-radius: 20px;\n    list-style: none;\n    background-color: #ffe6e6;\n    width: 160px;\n    transition: filter 0.5s;\n    position: relative;\n  }\n\n  .list-additional:hover {\n    filter: drop-shadow(4px 4px 4px rgba(0, 0, 0, 0.5));\n  }\n  .cast-icon {\n    position: absolute;\n    top: 4px;\n    margin-left: 5px;\n    width: 20px;\n    height: 30px;\n  }\n\n  .list {\n    display: flex;\n    gap: 10px;\n    padding: 0px;\n  }\n\n  .back-btn {\n    color: #660000 !important;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin-bottom: 15px;\n    width: 150px;\n    height: 40px;\n    border-radius: 50px;\n    border: 3px solid #fff;\n\n    font-size: 18px;\n    font-weight: bold;\n    text-transform: uppercase;\n    cursor: pointer;\n    outline: none;\n    transition: background-color 0.3s, color 0.3s, border-color 0.5s;\n  }\n  .back-btn:hover {\n    border-color: #660000 !important;\n  }\n\n  .back-link {\n    padding: 0 25px;\n  }\n  .main-content {\n    display: flex;\n    gap: 20px;\n  }\n\n  .main-img {\n    width: 100%;\n    height: auto;\n    max-width: 350px;\n  }\n\n  .main-decr {\n    display: flex;\n    margin-top: 50px;\n    flex-direction: column;\n  }\n\n  .card-title {\n    font-weight: 500;\n    margin-bottom: 20px;\n  }\n\n  .card-score {\n    margin-bottom: 20px;\n  }\n\n  .card-overview {\n    margin-bottom: 10px;\n  }\n\n  .text-overview {\n    margin-bottom: 20px;\n  }\n\n  .genres-title {\n    margin-bottom: 10px;\n  }\n  .genres-item {\n    background-color: #ffe6e6;\n    margin-right: 10px;\n    padding: 5px 10px;\n    border-radius: 20px;\n  }\n\n  .info-link {\n    display: inline-block;\n    padding: 10px 40px;\n    padding-right: 80px;\n    border-radius: 15px;\n    text-decoration: none;\n    text-align: center;\n    font-size: 18px;\n    color: #000;\n\n    font-weight: 500;\n    transition: background-color 0.3s, color 0.3s;\n  }\n\n  .last-link {\n    margin-bottom: 0;\n  }\n  .loading-subpage {\n    display: flex;\n    justify-content: center;\n    font-size: 50px;\n    color: #660000;\n  }\n`;\n","import { styled } from 'styled-components';\n\nexport const TrailerContainer = styled.div`\n  .modal {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-color: rgba(0, 0, 0, 0.8);\n    z-index: 1000;\n  }\n\n  .modal-content {\n    padding: 50px;\n    border-radius: 10px;\n    text-align: center;\n    position: relative;\n  }\n\n  .close {\n    position: absolute;\n    top: -20px;\n    right: 10px;\n    font-size: 50px;\n    color: #660000;\n    font-weight: bold;\n    cursor: pointer;\n    transition: color 0.5s;\n  }\n\n  .close:hover {\n    color: #722121;\n  }\n\n  .video-title {\n    position: relative;\n    font-size: 20px;\n    cursor: pointer;\n    color: black;\n    transition: color 0.5s;\n    margin-top: 30px;\n    margin-left: 5px;\n  }\n  .video-title:hover {\n    color: #660000;\n  }\n\n  .video-icon {\n    position: absolute;\n    top: -5px;\n    margin-left: 10px;\n    width: 30px;\n    height: 30px;\n  }\n`;\n","import { useEffect, useState, useCallback } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { getMoviesVideo } from 'api/api';\nimport { MdOutlineOndemandVideo } from 'react-icons/md';\nimport { TrailerContainer } from './TrailerMovie.styled';\n\nconst TrailerMovie = () => {\n  const { moviesID } = useParams();\n  const [moviesVideo, setMoviesVideo] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const fetchMoviesVideo = useCallback(async () => {\n    try {\n      const { results } = await getMoviesVideo(moviesID);\n\n      const officialTrailer = results.find(\n        video => video.name === 'Official Trailer' && video.site === 'YouTube'\n      );\n      setMoviesVideo(officialTrailer || null);\n    } catch (error) {\n      console.error('Error fetching movie video:', error);\n    }\n  }, [moviesID]);\n\n  useEffect(() => {\n    fetchMoviesVideo();\n  }, [fetchMoviesVideo]);\n\n  const toggleModal = () => setIsModalOpen(prev => !prev);\n\n  return (\n    <TrailerContainer>\n      {moviesVideo && (\n        <div className=\"video-container\">\n          <h3 className=\"video-title\" onClick={toggleModal}>\n            {moviesVideo.name}\n            <MdOutlineOndemandVideo className=\"video-icon\" />\n          </h3>\n        </div>\n      )}\n      {isModalOpen && (\n        <div className=\"modal\">\n          <div className=\"modal-content\">\n            <span className=\"close\" onClick={toggleModal}>\n              &times;\n            </span>\n            <iframe\n              width=\"800\"\n              height=\"500\"\n              src={`https://www.youtube.com/embed/${moviesVideo.key}`}\n              title={moviesVideo.name}\n              allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n              allowFullScreen\n            />\n          </div>\n        </div>\n      )}\n    </TrailerContainer>\n  );\n};\n\nexport default TrailerMovie;\n","import { useState, useEffect, useCallback, Suspense } from 'react';\nimport { useParams, Link, Outlet, useLocation } from 'react-router-dom';\nimport { Button } from 'antd';\nimport { LuClapperboard } from 'react-icons/lu';\nimport { MdOutlineReviews } from 'react-icons/md';\n\nimport { getMoviesDetailsById } from '../../api/api';\nimport { MovieDetailsStyled } from './MovieDetails.styled';\nimport NoPoster from '../../assets/images/no-photo.jpg';\nimport { Loader } from 'components/Loader/Loader';\nimport TrailerMovie from 'components/TrailerMovie/TrailerMovie';\n\nconst MovieDetails = () => {\n  const { moviesID } = useParams();\n  const location = useLocation();\n  const [moviesInfo, setMoviesInfo] = useState({});\n  const backLink = location.state?.from || '/';\n\n  const fetchMoviesDetails = useCallback(async () => {\n    try {\n      const data = await getMoviesDetailsById(moviesID);\n      setMoviesInfo(data);\n    } catch (error) {\n      console.error(error.message);\n    }\n  }, [moviesID]);\n\n  useEffect(() => {\n    fetchMoviesDetails();\n  }, [fetchMoviesDetails]);\n\n  const { title, release_date, vote_average, overview, genres, poster_path } =\n    moviesInfo;\n  const year = new Date(release_date).getFullYear();\n  const score = Math.round(vote_average * 10);\n\n  return (\n    <>\n      <MovieDetailsStyled>\n        <Button className=\"back-btn\" to={backLink}>\n          <Link className=\"back-link\" to={backLink}>\n            Go back\n          </Link>\n        </Button>\n        <div className=\"main-content\">\n          <img\n            className=\"main-img\"\n            width={170}\n            src={\n              poster_path\n                ? `https://image.tmdb.org/t/p/original/${poster_path}`\n                : NoPoster\n            }\n            alt={title}\n          />\n          <div className=\"main-decr\">\n            <div>\n              <h2 className=\"card-title\">\n                {title} ({year})\n              </h2>\n              <p className=\"card-score\">User score {score} %</p>\n              <h3 className=\"card-overview\">Overview:</h3>\n              <p className=\"text-overview\">{overview}</p>\n              <h3 className=\"genres-title\">Genres:</h3>\n              {genres &&\n                genres.map(genre => (\n                  <span className=\"genres-item\" key={genre.id}>\n                    {genre.name}{' '}\n                  </span>\n                ))}\n              <TrailerMovie />\n            </div>\n            <div>\n              <ul className=\"list\">\n                <li className=\"list-additional list-cast\">\n                  <Link\n                    className=\"info-link\"\n                    to=\"cast\"\n                    state={{ from: backLink }}\n                  >\n                    CAST\n                    <LuClapperboard className=\"cast-icon\" />\n                  </Link>\n                </li>\n                <li className=\"list-additional\">\n                  <Link\n                    className=\"info-link last-link\"\n                    to=\"review\"\n                    state={{ from: backLink }}\n                  >\n                    REVIEWS\n                    <MdOutlineReviews className=\"cast-icon\" />\n                  </Link>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </MovieDetailsStyled>\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import MovieDetails from 'components/MovieDetails/MovieDetails';\n\nconst MovieDetailsPage = () => {\n  return (\n    <>\n      <MovieDetails />\n    </>\n  );\n};\n\nexport default MovieDetailsPage;\n"],"names":["getPopularMovies","_getPopularMovies","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","page","response","_args","wrap","_context","prev","next","length","undefined","axios","params","sent","abrupt","data","stop","getSearchedMovies","_x","_getSearchedMovies","_callee2","query","_context2","getMoviesDetailsById","_x2","_getMoviesDetailsById","_callee3","movieId","_context3","concat","getMoviesCast","_x3","_getMoviesCast","_callee4","_context4","cast","getMoviesReviews","_x4","_getMoviesReviews","_callee5","_context5","results","getMoviesVideo","_x5","_getMoviesVideo","_callee6","_context6","api_key","include_adult","MovieDetailsStyled","styled","_templateObject","_taggedTemplateLiteral","TrailerContainer","moviesID","useParams","_useState","useState","_useState2","_slicedToArray","moviesVideo","setMoviesVideo","_useState3","_useState4","isModalOpen","setIsModalOpen","fetchMoviesVideo","useCallback","_yield$getMoviesVideo","officialTrailer","find","video","name","site","t0","console","error","useEffect","toggleModal","_jsxs","children","_jsx","className","onClick","MdOutlineOndemandVideo","width","height","src","key","title","allow","allowFullScreen","_location$state","location","useLocation","moviesInfo","setMoviesInfo","backLink","state","from","fetchMoviesDetails","message","release_date","vote_average","overview","genres","poster_path","year","Date","getFullYear","score","Math","round","_Fragment","Button","to","Link","NoPoster","alt","map","genre","id","TrailerMovie","LuClapperboard","MdOutlineReviews","Suspense","fallback","Loader","Outlet","MovieDetails"],"sourceRoot":""}