{"version":3,"file":"static/js/877.37c3b6ea.chunk.js","mappings":"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","sources":["api/api.js","components/popularMovieList/PopularMovieListStyle.styled.js","components/popularMovieList/PopularMovieList.jsx","components/searchBar/SearchBar.styled.js","components/searchBar/SearchBar.jsx","page/moviePage/moviePageStyle.styled.js","page/moviePage/MoviePage.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = `https://api.themoviedb.org/3`;\naxios.defaults.params = {\n  api_key: `35121646617936b190c0d2ce324cb747`,\n  include_adult: false,\n};\n\nexport async function getPopularMovies(page = 1) {\n  const response = await axios.get('/trending/movie/day', { params: { page } });\n  return response.data;\n}\n\nexport async function getSearchedMovies(query) {\n  const response = await axios.get('/search/movie?query', {\n    params: { query },\n  });\n  return response.data;\n}\n\nexport async function getMoviesDetailsById(movieId) {\n  const response = await axios.get(`movie/${movieId}`);\n  return response.data;\n}\n\nexport async function getMoviesCast(movieId) {\n  const response = await axios.get(`movie/${movieId}/credits`);\n  return response.data.cast;\n}\n\nexport async function getMoviesReviews(movieId) {\n  const response = await axios.get(`movie/${movieId}/reviews`);\n  return response.data.results;\n}\n","import { styled } from 'styled-components';\n\nexport const PopularMovieListStyle = styled.ul`\n  text-align: center;\n\n  .hero-section-title {\n    font-weight: 800;\n    margin-bottom: 20px;\n  }\n  .movie-list {\n    list-style: none;\n    display: flex;\n    justify-content: center;\n    flex-wrap: wrap;\n    gap: 20px;\n  }\n\n  .movie-preview {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-direction: column;\n    max-width: 210px;\n    height: 400px;\n    background-color: white;\n\n    overflow: hidden;\n  }\n\n  /* .movie-img {\n    width: 100%;\n    height: auto;\n  } */\n\n  .film-name {\n    font-size: 20px;\n    font-weight: 700;\n    text-align: center;\n    min-height: 48px;\n    width: 100%;\n  }\n  .hero-section-title {\n    font-size: 50px;\n    color: #660000;\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n\nimport { PopularMovieListStyle } from './PopularMovieListStyle.styled';\n\nimport NoPoster from '..//..//images/no-photo.jpg';\nimport { Loader } from 'components/loader/Loader';\n\n\n\n const   PopularMoviesList = ({ trendFilms, searchResults}) => {\n  const location = useLocation();\n  const [arrayList, setArrayList] = useState([]);\n   const isHomePage = location.pathname === \"/\";\n       const [loading, setLoading] = useState(false);\n\n\n  useEffect(() => {\n    const films = trendFilms || searchResults;\n\n    if (!films) {\n      return;\n    }\n\n\n    const promises = films.map(item => {\n      if (!item.poster_path) {\n        return Promise.resolve();\n      }\n\n      return new Promise(({resolve, reject}) => {\n        const img = new Image();\n        img.src = `https://image.tmdb.org/t/p/original/${item.poster_path}`;\n        img.onload = resolve;\n        img.onerror = reject;\n      });\n    });\n\n\n    Promise.all(promises)\n    .then(() => {\n        setLoading(true)\n      })\n      .catch(() => {\n        console.log('Error loading images');\n      });\n      setLoading(false)\n      setArrayList(films);\n  }, [trendFilms, searchResults]);\n\n\n  const createMovieDetailsURL = movieID => {\n    return `/movies/${movieID}`;\n  };\n\n\n\n  return (\n\n\n      <PopularMovieListStyle>\n      {isHomePage && <h1 className='hero-section-title'>Trending Movies</h1>}\n      {loading && <Loader/>}\n        <ul className='movie-list'>\n          {arrayList.map(item => (\n            <li className='movie-item' key={item.id}>\n              <div className='movie-preview'>\n                <Link\n                  style={{ textDecoration: 'none', color: 'black' }}\n                  to={createMovieDetailsURL(item.id)}\n                  state={{ from: location }}\n                >\n                  <img\n                    className='movie-img'\n                    width={210}\n                    height={315}\n                    loading='lazy'\n                    src={\n                      item.poster_path\n                        ? `https://image.tmdb.org/t/p/original/${item.poster_path}`\n                        :  NoPoster\n                    }\n                    alt={item.title}\n                    onError={error => {\n                      error.target.src = NoPoster;\n\n                    }}\n                  />\n                <p className='film-name'>{item.title}</p>\n                </Link>\n              </div>\n            </li>\n          ))}\n        </ul>\n        </PopularMovieListStyle>\n    )\n};\n\n\n \n\n\n\nexport default PopularMoviesList;","import { styled } from 'styled-components';\n\nexport const SearchStyles = styled.div`\n  padding: 30px 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  position: relative;\n  margin-bottom: 30px;\n\n  .search-icon {\n    fill: #fff;\n    transition: fill 0.3s, fill-opacity 0.3s;\n    &:hover,\n    &:focus {\n      fill: #050505;\n      fill-opacity: 0.5;\n    }\n  }\n  .form {\n    display: flex;\n    gap: 10px;\n    align-items: center;\n    & button {\n      max-height: 40px;\n    }\n  }\n\n  .input {\n    width: 340px;\n    height: 40px;\n    background: rgba(0, 0, 0, 0.3);\n    border: none;\n    outline: none;\n    padding: 5px;\n    font-size: 20px;\n    color: #fff;\n    text-shadow: 1px 1px 1px rgba(0, 0, 0, 0.3);\n    border: 1px solid rgba(0, 0, 0, 0.3);\n    border-radius: 4px;\n    box-shadow: inset 0 -5px 45px rgba(100, 100, 100, 0.2),\n      0 1px 1px rgba(255, 255, 255, 0.2);\n    -webkit-transition: box-shadow 0.5s ease;\n    -moz-transition: box-shadow 0.5s ease;\n    -o-transition: box-shadow 0.5s ease;\n    -ms-transition: box-shadow 0.5s ease;\n    transition: box-shadow 0.5s ease;\n  }\n\n  .input:focus {\n    box-shadow: inset 0 -5px 45px rgba(100, 100, 100, 0.4),\n      0 1px 1px rgba(255, 255, 255, 0.2);\n  }\n\n  .button-primary,\n  .button-primary:hover {\n    text-shadow: 0 -1px 0 rgba(0, 0, 0, 0.25);\n    color: #ffffff;\n  }\n\n  .button-primary {\n    cursor: pointer;\n    background-color: #660000;\n    padding: 16px 18px;\n    border: none;\n    text-shadow: 1px 1px 1px rgba(0, 0, 0, 0.4);\n    box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.2),\n      0 1px 2px rgba(0, 0, 0, 0.5);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-size: 22px;\n    gap: 5px;\n    color: white;\n    height: 200px;\n  }\n\n  .button-primary:hover,\n  .button-primary:active,\n  .button-primary.active {\n    filter: none;\n    color: #f5f5f5;\n    background-color: black;\n  }\n`;\n","import { useState } from \"react\";\n\nimport { SearchStyles } from './SearchBar.styled'\nimport { message } from \"antd\";\n\n\nexport const Searchbar = ({ onSubmit }) => {\n  const [value, setValue] = useState(\"\");\n\n\n  const handleChange = (event) => {\n    setValue(event.target.value.toLowerCase());\n\n  };\n\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (value.trim() === \"\") {\n      return message.info(\"Please enter key words for search\");\n    }\n    onSubmit(value);\n  \n    setValue(\"\");\n\n   \n\n    \n  };\n\n  return (\n    <SearchStyles>\n        <form className=\"form\" onSubmit={handleSubmit}>\n            <button type=\"submit\" className=\"button button-large button-primary\">\n               Search\n            </button>\n            <input\n                className=\"input\"\n                type=\"text\"\n                autoComplete=\"off\"\n                autoFocus\n                placeholder=\"Search movies\"\n                value={value}\n                onChange={handleChange}\n            />\n        </form>\n    </SearchStyles>\n  );\n};\n\n\n\n\n","import { styled } from 'styled-components';\n\nexport const MoviePageStyle = styled.div`\n  .loading-movie-page {\n    display: flex;\n    justify-content: center;\n    font-size: 50px;\n    color: #660000;\n  }\n`;\n","import { useState, useEffect, useCallback } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport { getSearchedMovies } from '../../api/api';\n\nimport {message} from 'antd';\n\nimport { Searchbar } from 'components/searchBar/SearchBar';\nimport PopularMoviesList from 'components/popularMovieList/PopularMovieList';\n\nimport { MoviePageStyle } from './moviePageStyle.styled';\nimport { Loader } from 'components/loader/Loader';\n\nconst MoviePage = () => {\n    const [searchParams, setSearchParams] = useSearchParams();\n    const [searchResults, setSearchResults] = useState([]);\n    const [loading, setLoading] = useState(false);\n\n  \n    const query = searchParams.get('query');\n\n\n    const handleSubmit = query => {\n        setSearchParams({ query: query });\n        setSearchResults([]);\n    };\n\n    \n    const fetchSearchedMovies = useCallback(async query => {\n        try {\n        setLoading(true);\n            const data = await getSearchedMovies(query);\n              if (data.results.length === 0) {\n             message.error(\"We found nothing for this request!\")\n             }\n        setSearchResults(data.results);\n      } \n      catch (error) {\n        console.log(error.message);\n      } \n      finally {\n          setLoading(false);\n        }\n    }, []);\n    \n    \n    useEffect(() => {\n        if (!searchResults.length) {\n          setLoading(false);\n        }\n    }, [searchResults]);\n    \n  \n    useEffect(() => {\n        if (!query) {\n            return;\n        }\n        fetchSearchedMovies(query);\n    }, [query, fetchSearchedMovies]);\n\n\n\n    return (\n        <MoviePageStyle>\n            <Searchbar onSubmit={handleSubmit}/>\n            {loading && <Loader/>}\n            <PopularMoviesList searchResults={searchResults}/>\n        </MoviePageStyle>\n    );\n};\n\n\n\nexport default MoviePage;"],"names":["getPopularMovies","_getPopularMovies","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","page","response","_args","wrap","_context","prev","next","length","undefined","axios","params","sent","abrupt","data","stop","getSearchedMovies","_x","_getSearchedMovies","_callee2","query","_context2","getMoviesDetailsById","_x2","_getMoviesDetailsById","_callee3","movieId","_context3","concat","getMoviesCast","_x3","_getMoviesCast","_callee4","_context4","cast","getMoviesReviews","_x4","_getMoviesReviews","_callee5","_context5","results","api_key","include_adult","PopularMovieListStyle","styled","_templateObject","_taggedTemplateLiteral","_ref","trendFilms","searchResults","location","useLocation","_useState","useState","_useState2","_slicedToArray","arrayList","setArrayList","isHomePage","pathname","_useState3","_useState4","loading","setLoading","useEffect","films","promises","map","item","poster_path","Promise","_ref2","resolve","reject","img","Image","src","onload","onerror","all","then","catch","console","log","_jsxs","children","_jsx","className","Loader","Link","style","textDecoration","color","to","movieID","id","state","from","width","height","NoPoster","alt","title","onError","error","target","SearchStyles","Searchbar","onSubmit","value","setValue","event","preventDefault","trim","message","type","autoComplete","autoFocus","placeholder","onChange","toLowerCase","MoviePageStyle","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","setSearchResults","get","fetchSearchedMovies","useCallback","t0","finish","PopularMoviesList"],"sourceRoot":""}