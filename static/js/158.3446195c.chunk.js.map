{"version":3,"file":"static/js/158.3446195c.chunk.js","mappings":"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","sources":["api/api.js","components/PopularMovies/PopularMovieListStyle.styled.js","components/PopularMovies/PopularMovieList.jsx","components/SearchBar/SearchBar.styled.js","components/SearchBar/SearchBar.jsx","components/MovieSearch/MovieSearch.styled.js","components/MovieSearch/MovieSearch.jsx","pages/MovieSearchPage.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = `https://api.themoviedb.org/3`;\naxios.defaults.params = {\n  api_key: `35121646617936b190c0d2ce324cb747`,\n  include_adult: false,\n};\n\nexport async function getPopularMovies(page = 1) {\n  const response = await axios.get('/trending/movie/day', { params: { page } });\n  return response.data;\n}\n\nexport async function getSearchedMovies(query) {\n  const response = await axios.get('/search/movie?query', {\n    params: { query },\n  });\n  return response.data;\n}\n\nexport async function getMoviesDetailsById(movieId) {\n  const response = await axios.get(`movie/${movieId}`);\n  return response.data;\n}\n\nexport async function getMoviesCast(movieId) {\n  const response = await axios.get(`movie/${movieId}/credits`);\n  return response.data.cast;\n}\n\nexport async function getMoviesReviews(movieId) {\n  const response = await axios.get(`movie/${movieId}/reviews`);\n  return response.data.results;\n}\n\nexport async function getMoviesVideo(movieId) {\n  const response = await axios.get(`movie/${movieId}/videos`);\n  return response.data;\n}\n","import { styled } from 'styled-components';\n\nexport const PopularMovieListStyle = styled.div`\n  text-align: center;\n\n  .hero-section-title {\n    color: #660000;\n    font-weight: 500;\n    margin-bottom: 20px;\n  }\n  .movie-list {\n    list-style: none;\n    display: flex;\n    justify-content: center;\n    flex-wrap: wrap;\n    gap: 10px;\n  }\n\n  .movie-preview {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-direction: column;\n    max-width: 400px;\n    max-height: 500px;\n    background-color: rgba(95, 6, 23, 0.3);\n    border-radius: 5%;\n    overflow: hidden;\n    position: relative;\n    transition: filter 0.5s;\n  }\n\n  .movie-preview:hover {\n    filter: drop-shadow(5px 5px 5px rgba(0, 0, 0, 0.3));\n  }\n\n  .movie-img {\n    width: 100%;\n    max-width: 400px;\n    max-height: 500px;\n    object-fit: cover;\n  }\n\n  .film-name {\n    font-size: 16px;\n    font-weight: 500;\n    text-align: center;\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    background-color: rgba(0, 0, 0, 0.7);\n    color: #fff;\n    padding: 20px;\n    opacity: 0;\n    transition: opacity 0.5s;\n    pointer-events: none;\n  }\n\n  .movie-preview:hover .film-name,\n  .movie-preview:focus .film-name {\n    opacity: 1;\n    pointer-events: all;\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { PopularMovieListStyle } from './PopularMovieListStyle.styled';\nimport NoPoster from '../../assets/images/no-photo.jpg';\nimport { Loader } from 'components/Loader/Loader';\n\nconst PopularMoviesList = ({ trendFilms, searchResults }) => {\n  const location = useLocation();\n  const [arrayList, setArrayList] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const isHomePage = location.pathname === '/';\n\n  useEffect(() => {\n    const films = trendFilms || searchResults;\n\n    if (!films) {\n      return;\n    }\n\n    setLoading(true);\n    setArrayList(films);\n    setLoading(false);\n  }, [trendFilms, searchResults]);\n\n  const createMovieDetailsURL = movieID => {\n    return `/movies/${movieID}`;\n  };\n\n  return (\n    <PopularMovieListStyle>\n      {isHomePage && <h1 className=\"hero-section-title\">Trending Movies</h1>}\n      {loading && <Loader />}\n      <ul className=\"movie-list\">\n        {arrayList.map(item => (\n          <li className=\"movie-item\" key={item.id}>\n            <div className=\"movie-preview\">\n              <Link\n                style={{ textDecoration: 'none', color: 'black' }}\n                to={createMovieDetailsURL(item.id)}\n                state={{ from: location }}\n              >\n                <img\n                  className=\"movie-img\"\n                  src={\n                    item.poster_path\n                      ? `https://image.tmdb.org/t/p/w300/${item.poster_path}`\n                      : NoPoster\n                  }\n                  alt={item.title}\n                  onError={error => {\n                    error.target.src = NoPoster;\n                  }}\n                />\n                <p className=\"film-name\">{item.title}</p>\n              </Link>\n            </div>\n          </li>\n        ))}\n      </ul>\n    </PopularMovieListStyle>\n  );\n};\n\nexport default PopularMoviesList;\n","import { styled } from 'styled-components';\n\nexport const SearchStyles = styled.div`\n  padding: 30px 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  position: relative;\n  margin-bottom: 30px;\n\n  .search-icon {\n    fill: #fff;\n    transition: fill 0.3s, fill-opacity 0.3s;\n    &:hover,\n    &:focus {\n      fill: #050505;\n      fill-opacity: 0.5;\n    }\n  }\n  .form {\n    display: flex;\n    gap: 10px;\n    align-items: center;\n    & button {\n      max-height: 40px;\n    }\n  }\n\n  .input {\n    width: 340px;\n    height: 40px;\n    background: rgba(0, 0, 0, 0.3);\n    border: none;\n    outline: none;\n    padding: 5px;\n    font-size: 20px;\n    color: #fff;\n    text-shadow: 1px 1px 1px rgba(0, 0, 0, 0.3);\n    border: 1px solid rgba(0, 0, 0, 0.3);\n    border-radius: 4px;\n    box-shadow: inset 0 -5px 45px rgba(100, 100, 100, 0.2),\n      0 1px 1px rgba(255, 255, 255, 0.2);\n    -webkit-transition: box-shadow 0.5s ease;\n    -moz-transition: box-shadow 0.5s ease;\n    -o-transition: box-shadow 0.5s ease;\n    -ms-transition: box-shadow 0.5s ease;\n    transition: box-shadow 0.5s ease;\n  }\n\n  .input:focus {\n    box-shadow: inset 0 -5px 45px rgba(100, 100, 100, 0.4),\n      0 1px 1px rgba(255, 255, 255, 0.2);\n  }\n\n  .button-primary,\n  .button-primary:hover {\n    text-shadow: 0 -1px 0 rgba(0, 0, 0, 0.25);\n    color: #ffffff;\n  }\n\n  .button-primary {\n    cursor: pointer;\n    background-color: #660000;\n    padding: 16px 18px;\n    border: none;\n    text-shadow: 1px 1px 1px rgba(0, 0, 0, 0.4);\n    box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.2),\n      0 1px 2px rgba(0, 0, 0, 0.5);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-size: 22px;\n    gap: 5px;\n    color: white;\n    height: 200px;\n  }\n\n  .button-primary:hover,\n  .button-primary:active,\n  .button-primary.active {\n    filter: none;\n    color: #f5f5f5;\n    background-color: black;\n  }\n`;\n","import { useState } from \"react\";\n\nimport { SearchStyles } from './SearchBar.styled'\nimport { message } from \"antd\";\n\n\nexport const Searchbar = ({ onSubmit }) => {\n  const [value, setValue] = useState(\"\");\n\n\n  const handleChange = (event) => {\n    setValue(event.target.value.toLowerCase());\n\n  };\n\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (value === \"\") {\n      return message.info(\"Please enter key words for search\");\n    }\n    onSubmit(value);\n  \n    setValue(\"\");\n  };\n\n  return (\n    <SearchStyles>\n        <form className=\"form\" onSubmit={handleSubmit}>\n            <button type=\"submit\" className=\"button button-large button-primary\">\n               Search\n            </button>\n            <input\n                className=\"input\"\n                type=\"text\"\n                autoComplete=\"off\"\n                autoFocus\n                placeholder=\"Search movies\"\n                value={value}\n                onChange={handleChange}\n            />\n        </form>\n    </SearchStyles>\n  );\n};\n\n\n\n\n","import { styled } from 'styled-components';\n\nexport const MoviePageStyle = styled.div`\n  .loading-movie-page {\n    display: flex;\n    justify-content: center;\n    font-size: 50px;\n    color: #660000;\n  }\n`;\n","import { useState, useEffect, useCallback } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport { getSearchedMovies } from '../../api/api';\n\nimport { message } from 'antd';\n\nimport { Searchbar } from 'components/SearchBar/SearchBar';\nimport PopularMoviesList from 'components/PopularMovies/PopularMovieList';\n\nimport { MoviePageStyle } from './MovieSearch.styled';\n\nconst MovieSearch = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [searchResults, setSearchResults] = useState([]);\n\n  const query = searchParams.get('query');\n\n  const handleSubmit = query => {\n    setSearchParams({ query: query });\n    setSearchResults([]);\n  };\n\n  const fetchSearchedMovies = useCallback(async query => {\n    try {\n      const data = await getSearchedMovies(query);\n      if (data.results.length === 0) {\n        message.error('We found nothing for this request!');\n      }\n      setSearchResults(data.results);\n    } catch (error) {\n      console.log(error.message);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n    fetchSearchedMovies(query);\n  }, [query, fetchSearchedMovies]);\n\n  return (\n    <MoviePageStyle>\n      <Searchbar onSubmit={handleSubmit} />\n      <PopularMoviesList searchResults={searchResults} />\n    </MoviePageStyle>\n  );\n};\n\nexport default MovieSearch;\n","import MovieSearch from 'components/MovieSearch/MovieSearch';\n\nconst MovieSearchPage = () => {\n  return (\n    <>\n      <MovieSearch />\n    </>\n  );\n};\n\nexport default MovieSearchPage;\n"],"names":["getPopularMovies","_getPopularMovies","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","page","response","_args","wrap","_context","prev","next","length","undefined","axios","params","sent","abrupt","data","stop","getSearchedMovies","_x","_getSearchedMovies","_callee2","query","_context2","getMoviesDetailsById","_x2","_getMoviesDetailsById","_callee3","movieId","_context3","concat","getMoviesCast","_x3","_getMoviesCast","_callee4","_context4","cast","getMoviesReviews","_x4","_getMoviesReviews","_callee5","_context5","results","getMoviesVideo","_x5","_getMoviesVideo","_callee6","_context6","api_key","include_adult","PopularMovieListStyle","styled","_templateObject","_taggedTemplateLiteral","_ref","trendFilms","searchResults","location","useLocation","_useState","useState","_useState2","_slicedToArray","arrayList","setArrayList","_useState3","_useState4","loading","setLoading","isHomePage","pathname","useEffect","films","_jsxs","children","_jsx","className","Loader","map","item","Link","style","textDecoration","color","to","movieID","id","state","from","src","poster_path","NoPoster","alt","title","onError","error","target","SearchStyles","Searchbar","onSubmit","value","setValue","event","preventDefault","message","type","autoComplete","autoFocus","placeholder","onChange","toLowerCase","MoviePageStyle","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","setSearchResults","get","fetchSearchedMovies","useCallback","t0","console","log","PopularMoviesList","_Fragment","MovieSearch"],"sourceRoot":""}