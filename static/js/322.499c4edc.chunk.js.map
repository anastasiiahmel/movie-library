{"version":3,"file":"static/js/322.499c4edc.chunk.js","mappings":"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","sources":["api/api.js","components/popularMovieList/PopularMovieListStyle.styled.js","components/popularMovieList/PopularMovieList.jsx","page/homePage/HomePage.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = `https://api.themoviedb.org/3`;\naxios.defaults.params = {\n  api_key: `35121646617936b190c0d2ce324cb747`,\n  include_adult: false,\n};\n\nexport async function getPopularMovies(page = 1) {\n  const response = await axios.get('/trending/movie/day', { params: { page } });\n  return response.data;\n}\n\nexport async function getSearchedMovies(query) {\n  const response = await axios.get('/search/movie?query', {\n    params: { query },\n  });\n  return response.data;\n}\n\nexport async function getMoviesDetailsById(movieId) {\n  const response = await axios.get(`movie/${movieId}`);\n  return response.data;\n}\n\nexport async function getMoviesCast(movieId) {\n  const response = await axios.get(`movie/${movieId}/credits`);\n  return response.data.cast;\n}\n\nexport async function getMoviesReviews(movieId) {\n  const response = await axios.get(`movie/${movieId}/reviews`);\n  return response.data.results;\n}\n","import { styled } from 'styled-components';\n\nexport const PopularMovieListStyle = styled.ul`\n  text-align: center;\n\n  .hero-section-title {\n    font-weight: 800;\n    margin-bottom: 20px;\n  }\n  .movie-list {\n    list-style: none;\n    display: flex;\n    justify-content: center;\n    flex-wrap: wrap;\n    gap: 20px;\n  }\n\n  .movie-preview {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-direction: column;\n    max-width: 210px;\n    height: 400px;\n    background-color: white;\n    overflow: hidden;\n    transition: filter 0.9s;\n  }\n\n  .movie-preview:hover {\n    filter: drop-shadow(5px 5px 5px rgba(0, 0, 0, 0.3));\n  }\n\n  .film-name {\n    font-size: 20px;\n    font-weight: 700;\n    text-align: center;\n    min-height: 48px;\n    width: 100%;\n  }\n  .hero-section-title {\n    font-size: 50px;\n    color: #660000;\n  }\n`;\n","\nimport { useState, useEffect } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { PopularMovieListStyle } from './PopularMovieListStyle.styled';\nimport NoPoster from '..//..//images/no-photo.jpg';\nimport { Loader } from 'components/loader/Loader';\n\nconst PopularMoviesList = ({ trendFilms, searchResults }) => {\n  const location = useLocation();\n  const [arrayList, setArrayList] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const isHomePage = location.pathname === \"/\";\n\n  useEffect(() => {\n    const films = trendFilms || searchResults;\n\n    if (!films) {\n      return;\n    }\n\n    const promises = films.map(item => {\n      if (!item.poster_path) {\n        return Promise.resolve();\n      }\n\n      return new Promise((resolve, reject) => {\n        const img = new Image();\n        img.src = `https://image.tmdb.org/t/p/original/${item.poster_path}`;\n        img.onload = resolve;\n        img.onerror = reject;\n      });\n    });\n\n\n    Promise.all(promises)\n      .then(() => {\n        setLoading(false); \n      })\n      .catch(() => {\n        console.log('Error loading images');\n        setLoading(false); \n      });\n\n    setArrayList(films);\n  }, [trendFilms, searchResults]);\n\n  const createMovieDetailsURL = movieID => {\n    return `/movies/${movieID}`;\n  };\n\n  return (\n    <PopularMovieListStyle>\n      {isHomePage && <h1 className='hero-section-title'>Trending Movies</h1>}\n      {loading && <Loader />} \n      <ul className='movie-list'>\n        {arrayList.map(item => (\n          <li className='movie-item' key={item.id}>\n            <div className='movie-preview'>\n              <Link\n                style={{ textDecoration: 'none', color: 'black' }}\n                to={createMovieDetailsURL(item.id)}\n                state={{ from: location }}\n              >\n                <img\n                  className='movie-img'\n                  width={210}\n                  height={315}\n                  loading='lazy'\n                  src={\n                    item.poster_path\n                      ? `https://image.tmdb.org/t/p/original/${item.poster_path}`\n                      : NoPoster\n                  }\n                  alt={item.title}\n                  onError={error => {\n                    error.target.src = NoPoster;\n                  }}\n                />\n                <p className='film-name'>{item.title}</p>\n              </Link>\n            </div>\n          </li>\n        ))}\n      </ul>\n    </PopularMovieListStyle>\n  );\n};\n\nexport default PopularMoviesList;\n","import { useEffect, useState, useCallback } from \"react\";\n\nimport { getPopularMovies } from \"..//../api/api\";\n\nimport PopularMoviesList from \"components/popularMovieList/PopularMovieList\";\n\n\n\n const HomePage = () => {\n    const [popular, setPopular] = useState([]);\n\n\n    const fetchMovies = useCallback(async () => {\n        try{    \n            const data = await getPopularMovies();\n            setPopular(data.results);\n        }\n        catch(error){\n            console.log(error.message);\n        }\n    },[]);\n\n\n    useEffect(() => {\n        fetchMovies();\n    }, [fetchMovies]);\n\n\n\n    return(\n        <>\n        <PopularMoviesList trendFilms={popular} />\n        </>\n    );\n};\n\n\nexport default HomePage;"],"names":["getPopularMovies","_getPopularMovies","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","page","response","_args","wrap","_context","prev","next","length","undefined","axios","params","sent","abrupt","data","stop","getSearchedMovies","_x","_getSearchedMovies","_callee2","query","_context2","getMoviesDetailsById","_x2","_getMoviesDetailsById","_callee3","movieId","_context3","concat","getMoviesCast","_x3","_getMoviesCast","_callee4","_context4","cast","getMoviesReviews","_x4","_getMoviesReviews","_callee5","_context5","results","api_key","include_adult","PopularMovieListStyle","styled","_templateObject","_taggedTemplateLiteral","_ref","trendFilms","searchResults","location","useLocation","_useState","useState","_useState2","_slicedToArray","arrayList","setArrayList","_useState3","_useState4","loading","setLoading","isHomePage","pathname","useEffect","films","promises","map","item","poster_path","Promise","resolve","reject","img","Image","src","onload","onerror","all","then","catch","console","log","_jsxs","children","_jsx","className","Loader","Link","style","textDecoration","color","to","movieID","id","state","from","width","height","NoPoster","alt","title","onError","error","target","popular","setPopular","fetchMovies","useCallback","t0","message","_Fragment","PopularMoviesList"],"sourceRoot":""}