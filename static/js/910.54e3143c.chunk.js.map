{"version":3,"file":"static/js/910.54e3143c.chunk.js","mappings":"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","sources":["api/api.js","page/movieDetailsPage/MovieDetails.styled.js","page/movieDetailsPage/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = `https://api.themoviedb.org/3`;\naxios.defaults.params = {\n  api_key: `35121646617936b190c0d2ce324cb747`,\n  include_adult: false,\n};\n\nexport async function getPopularMovies(page = 1) {\n  const response = await axios.get('/trending/movie/day', { params: { page } });\n  return response.data;\n}\n\nexport async function getSearchedMovies(query) {\n  const response = await axios.get('/search/movie?query', {\n    params: { query },\n  });\n  return response.data;\n}\n\nexport async function getMoviesDetailsById(movieId) {\n  const response = await axios.get(`movie/${movieId}`);\n  return response.data;\n}\n\nexport async function getMoviesCast(movieId) {\n  const response = await axios.get(`movie/${movieId}/credits`);\n  return response.data.cast;\n}\n\nexport async function getMoviesReviews(movieId) {\n  const response = await axios.get(`movie/${movieId}/reviews`);\n  return response.data.results;\n}\n","import { styled } from 'styled-components';\n\nexport const MovieDetailsStyled = styled.section`\n  .list-additional {\n    cursor: pointer;\n    list-style: none;\n    background-color: #660000;\n    width: 100px;\n    color: white;\n    transition: background-color 0.5s;\n  }\n\n  .list-additional:hover {\n    background-color: #722121;\n    filter: drop-shadow(4px 4px 4px rgba(0, 0, 0, 0.2));\n  }\n\n\n.list{\n  display: flex;\n  gap: 10px;\n}\n\n  .back-btn {\n    color: #660000 !important;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin-bottom: 15px;\n    width: 150px;\n    height: 40px;\n    border-radius: 50px;\n    border: 3px solid #fff;\n\n    font-size: 18px;\n    font-weight: bold;\n    text-transform: uppercase;\n    cursor: pointer;\n    outline: none;\n    transition: background-color 0.3s, color 0.3s, border-color 0.5s;\n  }\n  .back-btn:hover {\n    border-color: #660000 !important;\n  }\n\n  .back-link {\n    padding: 0 25px;\n  }\n  .main-content {\n    display: flex;\n    gap: 20px;\n  }\n\n  .main-img {\n    width: 100%;\n    height: auto;\n    max-width: 350px;\n  }\n\n  .main-decr {\n    display: flex;\n    margin-top: 50px;\n    flex-direction: column;\n  }\n\n  .card-title {\n    font-weight: 700;\n    margin-bottom: 20px;\n  }\n\n  .card-score {\n    margin-bottom: 20px;\n  }\n\n  .card-overview {\n    margin-bottom: 10px;\n  }\n\n  .text-overview {\n    margin-bottom: 20px;\n  }\n\n  .genres-title {\n    margin-bottom: 10px;\n  }\n\n  .information-title {\n    padding: 8px 18px;\n    color: white;\n    background-color: #660000;\n    width: 300px;\n    margin-bottom: 10px;\n    font-size: 24px;\n  }\n\n  .info-link {\n    display: inline-block;\n    padding: 5px 15px;\n    border-radius: 15px;\n    text-decoration: none;\n    text-align: center;\n    font-size: 20px;\n    color: white;\n\n    font-weight: 500;\n    transition: background-color 0.3s, color 0.3s;\n  }\n\n  .last-link {\n    margin-bottom: 0;\n  }\n  .loading-subpage {\n    display: flex;\n    justify-content: center;\n    font-size: 50px;\n    color: #660000;\n  }\n`;","import { useState, useEffect, useCallback} from 'react';\nimport { useParams, Link, Outlet, useLocation } from 'react-router-dom';\nimport { Suspense } from 'react';\n\nimport {  Button  } from 'antd';\n\nimport { getMoviesDetailsById } from '../../api/api';\n\nimport { MovieDetailsStyled } from './MovieDetails.styled';\n\nimport NoPoster from '../../images/no-photo.jpg';\nimport { Loader } from 'components/loader/Loader';\n\n\n\nconst MovieDetailsPage = () => {\n  const location = useLocation();\n  const [moviesInfo, setMoviesInfo] = useState({});\n  const { moviesID } = useParams();\n  const backLink = location?.state?.from ?? '/';\n\n\n  const fetchMoviesDetails = useCallback(async () => {\n    try {\n      const data = await getMoviesDetailsById(moviesID);\n      setMoviesInfo(data);\n    } catch (error) {\n      console.log(error.message);\n    } \n  }, [moviesID]);\n\n\n  useEffect(() => {\n    fetchMoviesDetails();\n  }, [fetchMoviesDetails]);\n\n\n  const date = new Date(moviesInfo.release_date);\n  const year = date.getFullYear();\n  const score = Math.round(moviesInfo.vote_average * 10);\n  const overview = moviesInfo.overview;\n  const genres = moviesInfo.genres;\n\n\n\n  return (\n    <>\n      <MovieDetailsStyled>\n        <Button className='back-btn' to={backLink}>\n        <Link className='back-link' to={backLink}>Go back</Link>\n        </Button>\n        <div className='main-content'>\n          <img className='main-img' width={170}\n            src={moviesInfo.poster_path\n              ? `https://image.tmdb.org/t/p/original/${moviesInfo.poster_path}`\n              : NoPoster}\n            alt={moviesInfo.title}\n          />\n          <div className='main-decr'>\n            <div>\n              <h2 className='card-title'>{moviesInfo.title} ({year})</h2>\n              <p className='card-score'>User score {score} %</p>\n              <h3 className='card-overview'>Overview:</h3>\n              <p className='text-overview'>{overview}</p>\n              <h3 className='genres-title'>Genres:</h3>\n              {genres &&\n              genres.map(genre => \n              <span key={genre.id}> {genre.name},</span>)}\n            </div>\n            <div>\n              <h3 className='information-title'>Additional Information</h3>\n              <ul className='list'>\n                <li className='list-additional list-cast'>\n                  <Link className='info-link'\n                    to=\"cast\"\n                    state={{from: backLink}}\n                    >Casts\n                  </Link>\n                </li>\n                <li className='list-additional'> \n                  <Link className='info-link last-link'\n                    to=\"review\"\n                    state={{from: backLink}}\n                    >Reviews\n                  </Link>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </MovieDetailsStyled>\n      <Suspense fallback={<Loader/>}>\n        <Outlet/> \n      </Suspense>\n    </>\n  ) \n};\n\n\nexport default MovieDetailsPage;"],"names":["getPopularMovies","_getPopularMovies","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","page","response","_args","wrap","_context","prev","next","length","undefined","axios","params","sent","abrupt","data","stop","getSearchedMovies","_x","_getSearchedMovies","_callee2","query","_context2","getMoviesDetailsById","_x2","_getMoviesDetailsById","_callee3","movieId","_context3","concat","getMoviesCast","_x3","_getMoviesCast","_callee4","_context4","cast","getMoviesReviews","_x4","_getMoviesReviews","_callee5","_context5","results","api_key","include_adult","MovieDetailsStyled","styled","_templateObject","_taggedTemplateLiteral","_location$state$from","_location$state","location","useLocation","_useState","useState","_useState2","_slicedToArray","moviesInfo","setMoviesInfo","moviesID","useParams","backLink","state","from","fetchMoviesDetails","useCallback","t0","console","log","message","useEffect","year","Date","release_date","getFullYear","score","Math","round","vote_average","overview","genres","_jsxs","_Fragment","children","_jsx","Button","className","to","Link","width","src","poster_path","NoPoster","alt","title","map","genre","name","id","Suspense","fallback","Loader","Outlet"],"sourceRoot":""}